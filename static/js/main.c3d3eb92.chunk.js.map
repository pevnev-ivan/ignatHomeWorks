{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","style","wrap","container","avatarContainer","avatar","src","alt","message","name","text","time","messageData","messageData2","HW1","container__hw1","Affair","s","affair__element","affair_text","affair","affair__btn","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","length","map","a","key","priority","affair__empty","affairs__containerAll","affairs__container","affair__filterBtnsContainer","affair__filterBtns","ChangeFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","setFilter","filteredAffairs","filterAffairs","deleteAffair","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.c3d3eb92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs__containerAll\":\"Affairs_affairs__containerAll__2dMXb\",\"affairs__container\":\"Affairs_affairs__container__3iZnj\",\"affair__element\":\"Affairs_affair__element__2NXiq\",\"affair__btn\":\"Affairs_affair__btn__2D8Eq\",\"affair_text\":\"Affairs_affair_text__II8uL\",\"affair__filterBtnsContainer\":\"Affairs_affair__filterBtnsContainer__1xfkw\",\"affair__filterBtns\":\"Affairs_affair__filterBtns__2KIYM\",\"affair__empty\":\"Affairs_affair__empty__qti-L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Message_wrap__2RBmt\",\"container\":\"Message_container__3TTqG\",\"message\":\"Message_message__36EaT\",\"text\":\"Message_text__irvEg\",\"avatar\":\"Message_avatar__h5uM-\",\"avatarContainer\":\"Message_avatarContainer__1hYYs\",\"time\":\"Message_time__1LoHm\",\"name\":\"Message_name__1EarO\",\"container__hw1\":\"Message_container__hw1__5Yed2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3yAYC\"};","import React from 'react'\nimport style from './Message.module.css'\n\ntype MessageType = {\n    avatar: string;\n    name: string;\n    message: string;\n    time: string;\n\n}\n\nfunction Message(props: MessageType) {\n    return (<>\n            <div className={style.wrap}>\n            <div className={style.container}>\n                <div className={style.avatarContainer}>\n                    <img className={style.avatar} src={props.avatar} alt=\"Avatar pic\"/>\n                </div>\n\n                <div className={style.message}>\n                    <p className={style.name}>{props.name}</p>\n                    <p className={style.text}>{props.message}</p>\n                    <span className={style.time}>{props.time}</span>\n                </div>\n            </div>\n            </div>\n\n\n        </>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\nimport style from './Message.module.css'\n\nconst messageData = {\n    avatar: 'https://pbs.twimg.com/profile_images/1459434196888399874/ZA_NMTCV_400x400.jpg',\n    name: 'Kyojuro Rengoku',\n    message: 'Mune o hatte ikiro',\n    time: '22:00',\n}\n\nconst messageData2 = {\n    avatar: 'https://i.pinimg.com/originals/57/5c/bc/575cbc223378eff049d151e30839f2af.jpg',\n    name: 'Giyu Tomioka',\n    message: 'これを簡単 (かんたん) と言 (い) ってしまえる簡単 (かんたん) な頭 (あたま) で羨 (うらや) ましい',\n    time: '22:25',\n}\n\nfunction HW1() {\n    return (\n        <div className={style.container__hw1}>\n\n            <h1> HomeWork 1</h1>\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <Message\n                avatar={messageData2.avatar}\n                name={messageData2.name}\n                message={messageData2.message}\n                time={messageData2.time}\n            />\n\n\n            {/*для личного творчества, могу проверить*/}\n           {/* <AlternativeMessage/>*/}\n\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    _id: number\n    affair: string\n    priority: string\n    deleteAffairCallback: any // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props._id)\n    }// need to fix\n\n    return (\n        < >\n            <ul>\n                <li className={s.affair__element}>\n                    <span className={s.affair_text}>{props.affair}</span>\n                    <button className={s.affair__btn} onClick={deleteCallback}>X</button>\n                </li>\n            </ul>\n        </>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType} from './HW2'\nimport s from \"./Affairs.module.css\";\n\ntype dataType = {\n    _id: number\n    name: string\n    priority: string\n}\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<dataType>\n    setFilter: any\n    deleteAffairCallback: (_id: number) => void\n    ChangeFilter: any\n}\n\nfunction Affairs(props: AffairsPropsType) {\n\n    const mappedAffairs = props.data.length ? props.data.map((a: AffairType) => {\n\n        return (\n        <Affair\n            key={a._id}\n            _id={a._id}\n            affair={a.name}\n            priority={a.priority}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />)\n    }) : <div className={s.affair__empty}><span >Task list is empty! &#127879;</span></div>\n\n    const setAll = () => {\n         props.ChangeFilter('all')\n    }\n    const setHigh = () => {\n        props.ChangeFilter('high')\n    }\n    const setMiddle = () => {\n        props.ChangeFilter('middle')\n    }\n    const setLow = () => {\n        props.ChangeFilter('low')\n    }\n\n    return (\n        <div className={s.affairs__containerAll}>\n            <div className={s.affairs__container}>\n\n                {mappedAffairs}\n                <div className={s.affair__filterBtnsContainer}>\n                    <button className={s.affair__filterBtns} onClick={setAll}>All</button>\n                    <button className={s.affair__filterBtns} onClick={setHigh}>High</button>\n                    <button className={s.affair__filterBtns} onClick={setMiddle}>Middle</button>\n                    <button className={s.affair__filterBtns} onClick={setLow}>Low</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n\nexport type AffairPriorityType = 'high' | 'middle' | 'low'\n\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}\n\nexport type FilterType = 'all' | AffairPriorityType\n\n\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'TypeScript', priority: 'high'},\n    {_id: 3, name: 'Eat', priority: 'low'},\n    {_id: 4, name: 'Sleep', priority: 'low'},\n    {_id: 5, name: 'Work', priority: 'high'},\n    {_id: 6, name: 'Reproduce', priority: 'middle'},\n]\n\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): any => { // need to fix any\n    switch (filter) {\n        case \"high\": return affairs.filter(affair => affair.priority === \"high\")\n        case \"middle\": return affairs.filter(affair => affair.priority === \"middle\")\n        case \"low\": return affairs.filter(affair => affair.priority === \"low\")\n        default: return affairs\n    }}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): any => { // need to fix any\n    return (\n        affairs.filter(affair => affair._id != _id)\n    )\n}\n\n\n\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n    const ChangeFilter = (filter: FilterType) => {\n        setFilter(filter)\n    }\n\n    return (\n        <div>\n\n            <h1>HomeWork 2</h1>\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                ChangeFilter={ChangeFilter}\n            />\n\n\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\n\nfunction App() {\n    return (\n        <body className={s.App}>\n            <HW1/>\n            <HW2/>\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            {/*<HW5/>*/}\n\n        </body>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}